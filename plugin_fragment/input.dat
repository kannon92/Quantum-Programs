
# PYTHONPATH must include directory above plugin directory.
#     Define either externally or here, then import plugin.


# Path to plugin_prop.so
objdir = '/Users/kevinhannon/Programs/Quantum_Programs/Quantum-Programs/plugin_prop'
# Path to data directory
datadir = 'data/'

import sys
sys.path.append(objdir)
import prop

sys.path.insert(0, './..')

import plugin_fragment

#molecule {
##O         -1.485163346097    -0.114724564047     0.000000000000
##H         -1.868415346097     0.762298435953     0.000000000000
#H         -0.533833346097     0.040507435953     0.000000000000
#--
##H        8.200             7.000             7.000
#units angstrom
#symmetry c1
#}

#molecule {
#H        200000000.00               200000000.000             200000000.000
#H        200000001.00               200000000.000             200000000.000
#--
#H        -1003.000             -1003.000             -1003.000
#H        -1002.000             -1003.000             -1003.000
#units angstrom
#symmetry c1
#}
molecule {
O         -1.485163346097    -0.114724564047     0.000000000000
H         -1.868415346097     0.762298435953     0.000000000000
H         -0.533833346097     0.040507435953     0.000000000000
--
F        3.000             3.000             3.000
H        4.200             3.000             3.000
##F        7.000             7.000             7.000
symmetry c1
units angstrom
}


set {
  basis 6-31g
  r_convergence 1e-12
  d_convergence 1e-12
  LocalCut  0.02
  reference rhf
  SCF_type PK
  property_filepath 'data'
  property_tasks ['ORBITALS']
  property_orbitals [] #1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33]
  freeze_core false
}

set plugin_fragment {
  print 3
}

energy('scf')
energy('plugin_fragment')
#energy('ccsd')
#print cc2
#print scf
#cc2newH = energy('conv-mp2')
energy('prop')
#plugin_local.exampleFN()

